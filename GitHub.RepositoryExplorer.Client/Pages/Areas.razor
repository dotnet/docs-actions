@page "/areas"

<PageTitle>GitHub Issues | Areas </PageTitle>

<ConfigureRepo @ref=_config>
    <OptionalMessageContent>
        <div>
            Areas are only available after the repo is configured.
        </div>
    </OptionalMessageContent>
    <PostConfigurationContent>
        @if (_repoLabelsState.IsLoading)
        {
            <ProgressIndicator Message="🏷️ Loading area labels..." />
        }
        else if (_summaryState.IsLoading)
        {
            <ProgressIndicator Message="🤖 Loading areas..." />
        }
        else
        {
            <div class="bg-light rounded border p2">
                <nav aria-label="Date selection">
                  <ul class="pagination justify-content-center mb-0">
                    <li class="page-item">
                      <a class="page-link clickable-link" aria-label="Previous Day" @onclick="OnPreviousDayClick">Previous Day</a>
                    </li>
                    <li class="page-item disabled" aria-current="page">
                      <a class="page-link">@_summaryState.Date.ToString()</a>
                    </li>
                    <li class="page-item">
                      <a class="page-link clickable-link" aria-label="Next Day" @onclick="OnNextDayClick">Next Day</a>
                    </li>
                  </ul>
                </nav>
            </div>
            <div class="mt-3">
                <div class="d-flex h-100">
                    <div class="accordion w-100" id="accordion">
                        @foreach (var product in _repoLabelsState.IssueClassification.ProductWithUnassignedAndTotal())
                        {
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="@(_encode(product, true))">
                                    <div class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                                        data-bs-target="#@(_encode(product, false))" aria-expanded="true" aria-controls="@(_encode(product, false))">
                                        <div class="row w-100 align-middle">
                                            <div class="col-2">
                                                <span class="fw-bold">
                                                    @product.DisplayLabel
                                                </span>
                                            </div>
                                            <div class="col-10">
                                            @foreach (var priority in _repoLabelsState.IssueClassification.PriorityWithUnassignedAndTotal())
                                            {
                                                var labelClass = priority.Label switch
                                                {
                                                    "Pri0" => "pri-0-label",
                                                    "Pri1" => "pri-1-label",
                                                    "Pri2" => "pri-2-label text-dark",
                                                    "Pri3" => "pri-3-label",
                                                    "*" => "bg-dark",
                                                    _ => "bg-info text-dark"
                                                };
                                                <span class="px-1">
                                                    <span class="badge @labelClass" data-bs-toggle="modal"
                                                        data-bs-target="#detailsModal" style="z-index: 100"
                                                        @onclick=@(() => PrepareModalData(product, null, priority))
                                                        @onclick:preventDefault="true"
                                                        @onclick:stopPropagation="true">
                                                        @($"{priority.DisplayLabel}: {GetIssueCountForProductAndPriority(product.Label, priority.Label):#,0}")
                                                    </span>
                                                </span>
                                            }
                                            </div>
                                        </div>
                                    </div>
                                </h2>
                                <div id="@(_encode(product, false))" class="accordion-collapse collapse"
                                    aria-labelledby="@(_encode(product, true))" data-bs-parent="#accordian">
                                    <div class="accordion-body">
                                        @if (product.Technologies?.Any(t => t.Label is not null) ?? false)
                                        {
                                            <table class="table table-striped table-hover">
                                                <thead>
                                                    <tr>
                                                        <th>&nbsp;</th>
                                                        @foreach (var priority in _repoLabelsState.IssueClassification.PriorityWithUnassignedAndTotal())
                                                        {
                                                            <th scope="col">
                                                                @priority.DisplayLabel
                                                            </th>
                                                        }
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                @foreach (var tech in product.Technologies?.Where(t => t.Label is not null) ?? Array.Empty<Technology>())
                                                {
                                                    <tr>
                                                        <th>@tech.DisplayLabel</th>
                                                        @foreach (var priority in _repoLabelsState.IssueClassification.PriorityWithUnassignedAndTotal())
                                                        {
                                                            <td>
                                                                <a class="link-primary clickable-link" data-bs-toggle="modal"
                                                                    data-bs-target="#detailsModal"
                                                                    @onclick=@(() => PrepareModalData(product, tech, priority))>
                                                                    @GetIssueCountForProductTechAndPriority(product.Label, tech.Label, priority.Label)
                                                                </a>
                                                            </td>
                                                        }
                                                    </tr>
                                                }
                                                </tbody>
                                            </table>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    <div class="modal fade" id="detailsModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="exampleModalLabel">@_modalTitle</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    @foreach (var (index, title, count) in _modalData.Select((item, index) => (index, item.Title, item.Count)))
                                    {
                                        var isLastRow = _modalData.Count == index + 1;
                                        var style = isLastRow ? "fw-bold" : "";
                                        <div class="row">
                                            <div class="col @style">
                                                @title
                                            </div>
                                            <div class="col @style">
                                                @count
                                            </div>
                                        </div>
                                    }
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Dismiss</button>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        }
    </PostConfigurationContent>
</ConfigureRepo>
